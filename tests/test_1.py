import search_base64.find as sb64


def test_sb64_gen_b64_words_bob():
    var = sb64.SearchBase64("Bob")
    var.gen_b64_words()
    b64_words_to_test = sorted((w.search_word for w in var.b64_words))
    assert b64_words_to_test == [
        "0JvYg",
        "0JvYh",
        "0JvYi",
        "0JvYj",
        "0JvYk",
        "0JvYl",
        "0JvYm",
        "0JvYn",
        "0JvYo",
        "0JvYp",
        "0JvYq",
        "0JvYr",
        "0JvYs",
        "0JvYt",
        "0JvYu",
        "0JvYv",
        "1Cb2I",
        "1Cb2J",
        "1Cb2K",
        "1Cb2L",
        "5Cb2I",
        "5Cb2J",
        "5Cb2K",
        "5Cb2L",
        "9Cb2I",
        "9Cb2J",
        "9Cb2K",
        "9Cb2L",
        "BCb2I",
        "BCb2J",
        "BCb2K",
        "BCb2L",
        "EJvYg",
        "EJvYh",
        "EJvYi",
        "EJvYj",
        "EJvYk",
        "EJvYl",
        "EJvYm",
        "EJvYn",
        "EJvYo",
        "EJvYp",
        "EJvYq",
        "EJvYr",
        "EJvYs",
        "EJvYt",
        "EJvYu",
        "EJvYv",
        "FCb2I",
        "FCb2J",
        "FCb2K",
        "FCb2L",
        "JCb2I",
        "JCb2J",
        "JCb2K",
        "JCb2L",
        "NCb2I",
        "NCb2J",
        "NCb2K",
        "NCb2L",
        "Qm9i",
        "RCb2I",
        "RCb2J",
        "RCb2K",
        "RCb2L",
        "UJvYg",
        "UJvYh",
        "UJvYi",
        "UJvYj",
        "UJvYk",
        "UJvYl",
        "UJvYm",
        "UJvYn",
        "UJvYo",
        "UJvYp",
        "UJvYq",
        "UJvYr",
        "UJvYs",
        "UJvYt",
        "UJvYu",
        "UJvYv",
        "VCb2I",
        "VCb2J",
        "VCb2K",
        "VCb2L",
        "ZCb2I",
        "ZCb2J",
        "ZCb2K",
        "ZCb2L",
        "dCb2I",
        "dCb2J",
        "dCb2K",
        "dCb2L",
        "hCb2I",
        "hCb2J",
        "hCb2K",
        "hCb2L",
        "kJvYg",
        "kJvYh",
        "kJvYi",
        "kJvYj",
        "kJvYk",
        "kJvYl",
        "kJvYm",
        "kJvYn",
        "kJvYo",
        "kJvYp",
        "kJvYq",
        "kJvYr",
        "kJvYs",
        "kJvYt",
        "kJvYu",
        "kJvYv",
        "lCb2I",
        "lCb2J",
        "lCb2K",
        "lCb2L",
        "pCb2I",
        "pCb2J",
        "pCb2K",
        "pCb2L",
        "tCb2I",
        "tCb2J",
        "tCb2K",
        "tCb2L",
        "xCb2I",
        "xCb2J",
        "xCb2K",
        "xCb2L",
    ]


def test_sb64_encode_nihongo():
    var = sb64.encode_to_b64("日本語".encode("utf-8"))
    assert var == "5pel5pys6Kqe"
